version: '3.5'

services:
  api1:
    image: rinha-backend:latest
    hostname: api1
    depends_on:
      - db
    expose:
      - "8080"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/_health || exit 1"
      interval: 10s
      timeout: 120s
      retries: 20
      start_period: 2s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.4GB'

  api2:
    image: rinha-backend:latest
    hostname: api2
    depends_on:
      - db
    expose:
      - "8080"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/_health || exit 1"
      interval: 10s
      timeout: 120s
      retries: 20
      start_period: 2s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.4GB'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.5GB'

  db:
    image: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: rinha
    command: postgres -c work_mem=512MB
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '1.7GB'

  influxdb:
    image: influxdb:1.8
    #    entrypoint: /bin/sh
    #    user: root
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
    depends_on:
      - nginx

  grafana:
    image: grafana/grafana:8.5.21
    #    entrypoint: /bin/sh
    #    user: root
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./dashboards:/var/lib/grafana/dashboards
      - ./grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    depends_on:
      - influxdb

  k6:
    image: grafana/k6:latest
    #    entrypoint: /bin/sh
    #    user: root
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./scripts:/scripts
    depends_on:
      - grafana

networks:
  default:
    driver: bridge
